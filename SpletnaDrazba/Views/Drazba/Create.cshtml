@model SpletnaDrazba.Models.Drazba

@{
    ViewBag.Title = "Create";
}



<h2>Ustvari dražbo</h2>


@using (Html.BeginForm(null,null,FormMethod.Post, new {enctype = "multipart/form-data"})) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Drazba</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.DatumOd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DatumOd, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DatumOd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DatumDo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DatumDo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DatumDo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NazivPredmeta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NazivPredmeta, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NazivPredmeta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Uporabnik, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Uporabnik, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Uporabnik, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Opis, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Opis, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Opis, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ZacetnaCena, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ZacetnaCena, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ZacetnaCena, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @{
                List<SelectListItem> listItems = new List<SelectListItem>();
                listItems.Add(new SelectListItem
                {
                    Text = "Tv Sprejemniki",
                    Value = "Tv Sprejemniki"
                });
                listItems.Add(new SelectListItem
                {
                    Text = "Akustika",
                    Value = "Akustika",
                    Selected = true
                });
                listItems.Add(new SelectListItem
                {
                    Text = "Prenosniki",
                    Value = "Prenosniki"
                });
                listItems.Add(new SelectListItem
                {
                    Text = "Tablični računalniki",
                    Value = "Tablični računalniki"
                });
                listItems.Add(new SelectListItem
                {
                    Text = "Računalniške komponente",
                    Value = "Računalniške komponente"
                });
                listItems.Add(new SelectListItem
                {
                    Text = "Oblačila",
                    Value = "Oblačila"
                });
                listItems.Add(new SelectListItem
                {
                    Text = "Dom",
                    Value = "Dom"
                });
                listItems.Add(new SelectListItem
                {
                    Text = "Šport",
                    Value = "Šport"
                });
                listItems.Add(new SelectListItem
                {
                    Text = "Stacionarna telefonija",
                    Value = "Stacionarna telefonija"
                });
                listItems.Add(new SelectListItem
                {
                    Text = "Mobilna telefonija",
                    Value = "Mobilna telefonija"
                });
            }
            <div class="col-md-10" style="margin-left: 20%">
                    @Html.DropDownListFor(model => model.Kategorija, listItems, "-- Izberite kategorijo --")
            </div>

            </div>
        <table>
            <tr>
                <td>File:</td>
                <td><input type="file" name="Files" id="Files" multiple /></td>
            </tr>
           
        </table>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Ustvari" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
